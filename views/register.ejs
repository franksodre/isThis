<body>
  <div id="notification" class="max-w-xs bg-white border border-gray-200 rounded-xl shadow-lg dark:bg-neutral-800 dark:border-neutral-700 mt-2 ml-4 fixed left-0 top-0 transform -translate-x-full transition-transform duration-500 ease-in-out hidden" role="alert">
      <div class="flex p-4">
          <div class="flex-shrink-0">
              <svg class="flex-shrink-0 size-4 text-red-500 mt-0.5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"></path>
              </svg>
            <!-- svg for good messages -->
            <!--
              <svg class="flex-shrink-0 size-4 text-teal-500 mt-0.5" xmlns="http://www.w3.org/2000/svg" width="16" height="16"  fill="currentColor" viewBox="0 0 16 16">
                     <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"></path>
               </svg>
             -->
          </div>
          <div class="ms-3">
              <p class="text-sm text-gray-700 dark:text-neutral-400" id="alerts__message">
                  <!-- dynamic -->
              </p>
          </div>
      </div>
  </div>
    <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
      <div class="sm:mx-auto sm:w-full sm:max-w-sm">
        <img class="mx-auto h-10 w-auto" src="/assets/inside_pc_logo_mark.png" alt="Your Company">
        <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Sign up to create account</h2>
      </div>

      <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
        <form class="space-y-6">
          <div>
              <label for="name" class="block text-sm font-medium leading-6 text-gray-900">username</label>
              <div class="mt-2">
                <input id="name" name="email" type="text" required class="block w-full rounded-md border-0 py-1.5 px-3 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 focus:bg-red-100">
              </div>
          </div>
          <div>
            <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Email address</label>
            <div class="mt-2">
              <input id="email" name="email" type="email" autocomplete="email" required class="block w-full rounded-md border-0 py-1.5 px-3 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
            </div>
          </div>

          <div>
            <div class="flex items-center justify-between">
              <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Password</label>
              <div class="text-sm">
                <a href="#" class="font-semibold text-indigo-600 hover:text-indigo-500">Forgot password?</a>
              </div>
            </div>
            <div class="mt-2">
              <input id="password" name="password" type="password" autocomplete="current-password" required class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
            </div>
          </div>

          <div>
            <button type="submit" class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Sign up</button>
          </div>
        </form>

        <p class="mt-10 text-center text-sm text-gray-500">
          Already you have an account?
          <a href="/customer/account/login" class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500">Sign in</a>
        </p>
      </div>
    </div>

    <script type="module">
        // import { redirect } from '../public/source/handlers/buttonRedirect.js'

        const form = document.querySelector('form');
        const SERVER_MSG = document.querySelector("#alerts__message");

        function updateDataServerMSG(data){
          const valueData_msg = "msg" in data ? data.msg : data.error;
          SERVER_MSG.innerHTML = `${valueData_msg}`
        }

        const showNotificationCallback = (callback) => {
            const notification = document.getElementById('notification');
            notification.classList.remove('hidden');
            notification.classList.remove('-translate-x-full');
            notification.classList.add('translate-x-0');
            if (typeof callback === 'function') {
                callback();
            }

            setTimeout(() => {
              hideNotification()
            }, 3000)
        };


        const hideNotification = () => {
            const notification = document.getElementById('notification');
            notification.classList.add('-translate-x-full');
            notification.classList.remove('translate-x-0');
            // Esperar a animação terminar antes de ocultar completamente
            setTimeout(() => {
                notification.classList.add('hidden');
            }, 500); // Esperar 500 milissegundos (0.5 segundos) para garantir que a animação termine
        }

        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            try {
                const url = "/";
                const response = await fetch('/customer/account/register', {
                    method: 'POST',
                    body: JSON.stringify({ name, email, password }),
                    headers: { 'content-Type': 'application/json' }
                })
                const data = await response.json();
                showNotificationCallback(updateDataServerMSG(data));

                if(response.ok || response.status === 201){//.status === 200 || response.status === 201
                    window.location = url;
                }

            } catch (e) {
                console.log(e)
            }
        })
    </script>
</body>